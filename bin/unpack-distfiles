#!/bin/sh
#set -x
#
# 1. Unpack aggregator and projects
# 2. Reorg source files, reusing Linux sources as the base for FreeBSD builds.
#
LINUX_DIRS="
    eclipse.pde/apitools/org.eclipse.pde.api.tools/fixed_api_descriptions/org.eclipse.swt.gtk.linux.aarch64-3.125.0.v20240227-1638.api_description
    eclipse.pde/apitools/org.eclipse.pde.api.tools/fixed_api_descriptions/org.eclipse.swt.gtk.linux.ppc64le-3.125.0.v20240227-1638.api_description
    eclipse.pde/apitools/org.eclipse.pde.api.tools/fixed_api_descriptions/org.eclipse.swt.gtk.linux.x86-64-3.125.0.v20240227-1638.api_description
	eclipse.platform.swt/binaries/org.eclipse.swt.gtk.linux.*
	eclipse.platform/resources/bundles/org.eclipse.core.filesystem/natives/unix/linux
	eclipse.platform/resources/bundles/org.eclipse.core.filesystem.linux.*
	eclipse.platform/team/bundles/org.eclipse.core.net.linux*
	equinox/bundles/org.eclipse.equinox.security.linux*
	equinox/bundles/org.eclipse.equinox.launcher.gtk.linux.*
	rt.equinox.binaries/org.eclipse.equinox.launcher.gtk.linux.*"

if [ ! -x bin/$(basename $0) ]
then
	echo "ERROR: Run this from top level"
	exit 1
fi
. ./config.sh

AGGR_MODULE=$(basename $ECLIPSE_TOP)
BASELINE=".baseline.${AGGR_MODULE}"

echo "INFO: Unpacking ${ECLIPSE_TOP}"
rm -rf ${AGGR_MODULE} ${BASELINE}
tar xf distfiles/${AGGR_MODULE}-${ECLIPSE_TAG}.tar.gz
mv ${AGGR_MODULE}-${ECLIPSE_TAG} ${AGGR_MODULE}

for M in ${ECLIPSE_MODULES}
do
	MODULE=$(basename $M | cut -f1 -d: | cut -f1 -d@)
	TAG=$(basename $M | cut -f1 -d: | cut -f2 -d@)
	if [ ${TAG} = ${MODULE} ]
	then
		TAG="${ECLIPSE_TAG}"
	fi
	DEST=$(basename $M | cut -f2 -d: | cut -f1 -d@)

	SNAP="${MODULE}-${TAG}"
	SUBDIR="${AGGR_MODULE}/${DEST}"
	ARCHIVE="distfiles/${SNAP}.tar.gz"

	if [ ! -r ${ARCHIVE} ]
	then
		echo "FATAL: ${ARCHIVE} not found"
		exit 1
	fi

	echo "INFO: Unpacking ${M}"
	rm -rf ${SUBDIR}
	tar xf ${ARCHIVE}
	mv ${SNAP} ${SUBDIR}
done

rename_arch ()
{
	# Rename to FreeBSD TARGET_ARCH names
	F=$(echo $1 | sed -e s/linux/freebsd/)
	case $F in
	*.arm)
		echo $(echo $F | sed -e 's/arm/armv7/');;
	*.arm-*)
		echo $(echo $F | sed -e 's/arm/armv7/');;
	*.ppc64le)
		echo $(echo $F | sed -e 's/ppc64le/powerpc64/');;
	*.ppc64le-*)
		echo $(echo $F | sed -e 's/ppc64le/powerpc64/');;
	*.x86)
		echo $(echo $F | sed -e 's/x86/i386/');;
	*.x86_64)
		echo $(echo $F | sed -e 's/x86_64/amd64/');;
    *.x86_64-*)
        echo $(echo $F | sed -e 's/x86_64/amd64/');;
	*)
		echo ${F};;
	esac
}

(
	echo "INFO: Renaming native files"
	cd ${AGGR_MODULE}

	for D in ${LINUX_DIRS}
	do
		if [ ! -e ${D} ]
		then
			continue
		fi

		NEWNAME=$(rename_arch ${D})
		mv ${D} ${NEWNAME}

		# Duplicate "powerpc64" into "powerpc64le"
		case ${NEWNAME} in
		*.powerpc64)
			cp -rf ${NEWNAME} `echo ${NEWNAME} | sed -e 's/powerpc64/powerpc64le/'`;;
		*.powerpc64-*)
			cp -rf ${NEWNAME} `echo ${NEWNAME} | sed -e 's/powerpc64/powerpc64le/'`;;
		esac
	done

	# Fixup binary locations
	GTK_EXE="rt.equinox.binaries/org.eclipse.equinox.executable/bin/gtk"
	rm -rf ${GTK_EXE}/linux
	for ARCH in amd64 powerpc64
	do
		mkdir -p ${GTK_EXE}/freebsd/${ARCH}
		touch ${GTK_EXE}/freebsd/${ARCH}/eclipse
	done
	# Clean up binaries
	#find . -name '*.so' -delete
)

(
    cd ${AGGR_MODULE}

    mv equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.aarch64/launcher.gtk.linux.aarch64.properties equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.aarch64/launcher.gtk.freebsd.aarch64.properties
    mv equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.amd64/launcher.gtk.linux.x86_64.properties equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.amd64/launcher.gtk.freebsd.amd64.properties
    mv equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.powerpc64/launcher.gtk.linux.ppc64le.properties equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.powerpc64/launcher.gtk.freebsd.powerpc64.properties
    mv equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.powerpc64le/launcher.gtk.linux.ppc64le.properties equinox/bundles/org.eclipse.equinox.launcher.gtk.freebsd.powerpc64le/launcher.gtk.freebsd.powerpc64le.properties
)

# Make a baseline copy
echo "INFO: Making baseline copy"
cd ${AGGR_MODULE} && find . -print | cpio -pdum ../${BASELINE}
